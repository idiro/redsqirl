<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>redsqirl-base-pig</artifactId>
    <packaging>jar</packaging>
    <name>Red Sqirl Worflow Pig Base Package</name>
    <description>Provide basic pig actions</description>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <generated.pck.dir>${project.build.directory}/${project.artifactId}-${project.version}/</generated.pck.dir>
        <resources.pck.dir>src/main/pck</resources.pck.dir>
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>
        <pck-repo>${basedir}/src/main/pck-repo</pck-repo>
        <target.pck-repo>${basedir}/target/pck-repo-${project.artifactId}-${project.version}</target.pck-repo>
    </properties>

    <parent>
        <groupId>idiro</groupId>
        <artifactId>redsqirl-base-packages</artifactId>
        <version>0.1</version>
    </parent>

    <distributionManagement>
           <repository>
               <id>internal</id>
               <name>Internal Release Repository</name>
               <url>scp://dev.local.net/var/www/html/apache-archiva-1.3.6/data/repositories/internal</url>
           </repository>
  
           <snapshotRepository>
               <id>snapshots</id>
               <name>Internal Snapshot Repository</name>
               <url>scp://dev.local.net/var/www/html/apache-archiva-1.3.6/data/repositories/snapshots</url>
           </snapshotRepository>
       </distributionManagement>
 
    <organization>
        <name>Idiro Technologies</name>
        <url>http://www.idiro.com</url>
    </organization>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <build>
    
    	<extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>1.0</version>
            </extension>
        </extensions>
    
       
        
	<plugins>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>3.1</version>
		<configuration>
		    <source>1.6</source>
		    <target>1.6</target>
		</configuration>
	    </plugin>

	    <plugin>
		<groupId>com.google.code.maven-replacer-plugin</groupId>
		<artifactId>replacer</artifactId>
		<version>1.5.2</version>
		<executions>
		    <execution>
			<id>create-pck-repo-sql</id>
			<phase>package</phase>
			<goals>
			    <goal>replace</goal>
			</goals>                   
			<configuration>
			    <file>${pck-repo}/record_repo.sql</file>
			    <outputFile>${target.pck-repo}/record_repo.sql</outputFile>         
			    <replacements>
				<replacement>
				    <token>#{ARTIFACTID}</token>
				    <value>${project.artifactId}</value>
				</replacement>
				<replacement>
				    <token>#{NAME}</token>
				    <value>${project.name}</value>
				</replacement>
				<replacement>
				    <token>#{DESCRIPTION}</token>
				    <value>${project.description}</value>
				</replacement>         
				<replacement>
				    <token>#{VERSION}</token>
				    <value>${project.version}</value>
				</replacement>     
				<replacement>
				    <token>#{TIMESTAMP}</token>
				    <value>${timestamp}</value>
				</replacement>         
			    </replacements>
			    <regex>false</regex>
			</configuration>
		    </execution>
		    <execution>
			<id>create-pck-repo-html</id>
			<phase>package</phase>
			<goals>
			    <goal>replace</goal>
			</goals>                   
			<configuration>
			    <file>${pck-repo}/redsqirl-base-pig.html</file>
			    <outputFile>${target.pck-repo}/${project.artifactId}-${project.version}.html</outputFile>         
			    <replacements>
				<replacement>
				    <token>#{ARTIFACTID}</token>
				    <value>${project.artifactId}</value>
				</replacement>
				<replacement>
				    <token>#{NAME}</token>
				    <value>${project.name}</value>
				</replacement>
				<replacement>
				    <token>#{DESCRIPTION}</token>
				    <value>${project.description}</value>
				</replacement>         
				<replacement>
				    <token>#{VERSION}</token>
				    <value>${project.version}</value>
				</replacement>     
				<replacement>
				    <token>#{TIMESTAMP}</token>
				    <value>${timestamp}</value>
				</replacement>         
			    </replacements>
			    <regex>false</regex>
			</configuration>
		    </execution>
		</executions>
	    </plugin>


	    <!-- Copy dependencies -->
	    <plugin>
		<artifactId>maven-resources-plugin</artifactId>
		<version>2.6</version>
		<executions>
		    <execution>
			<id>copy-resources</id>
			<phase>package</phase>
			<goals>
			    <goal>copy-resources</goal>
			</goals>
			<configuration>
			    <outputDirectory>${generated.pck.dir}</outputDirectory>
			    <resources>          
				<resource>
				    <directory>${resources.pck.dir}</directory>
				    <filtering>true</filtering>
				</resource>
			    </resources>              
			</configuration>            
		    </execution>
		</executions>
	    </plugin>
        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>copy-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${generated.pck.dir}/lib/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-assembly-plugin</artifactId>
		<version>2.4</version>
		<executions>
		    <execution>
			<id>zip_pck</id> <!-- this is used for inheritance merges -->
			<phase>package</phase> <!-- bind to the packaging phase -->
			<goals>
			    <goal>single</goal>
			</goals>
			<configuration>
			    <finalName>${project.artifactId}-${project.version}</finalName>
			    <appendAssemblyId>false</appendAssemblyId>
			    <outputDirectory>${target.pck-repo}</outputDirectory>
			    <descriptors>
				<descriptor>src/main/assembly/zip_pck.xml</descriptor>
			    </descriptors>
			</configuration>
		    </execution>
		    <execution>
			<id>zip_repo</id> <!-- this is used for inheritance merges -->
			<phase>package</phase> <!-- bind to the packaging phase -->
			<goals>
			    <goal>single</goal>
			</goals>
			<configuration>
			    <finalName>pck-repo-${project.artifactId}-${project.version}</finalName>
			    <appendAssemblyId>false</appendAssemblyId>
			    <outputDirectory>${project.build.directory}</outputDirectory>
			    <descriptors>
				<descriptor>src/main/assembly/zip_repo.xml</descriptor>
			    </descriptors>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	</plugins>
    </build> 

    <dependencies>
	<dependency>
	    <groupId>org.antlr</groupId>
	    <artifactId>antlr-runtime</artifactId>
	    <version>3.4-beta4</version>
	</dependency>
	<dependency>
	    <groupId>idiro</groupId>
	    <artifactId>redsqirl-wf-interface</artifactId>
	    <version>${project.version}</version>
	    <scope>compile</scope>
	</dependency>
	<dependency>
	    <groupId>idiro</groupId>
	    <artifactId>redsqirl-workflow</artifactId>
	    <version>${project.version}</version>
	    <scope>compile</scope>
	</dependency>
	<!-- TEST -->
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.11</version>
	    <scope>test</scope>
	</dependency>
    </dependencies>
</project>

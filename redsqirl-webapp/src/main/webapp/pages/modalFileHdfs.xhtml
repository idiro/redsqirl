<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">

<a4j:loadBundle basename="MessagesResources" var="messages" />

<script>
//<![CDATA[
           
	var fileModalFileHdfs;
	function dataTableOpenSelectOneRadio(radio, name) {
	    var id = radio.name.substring(radio.name.lastIndexOf(':'));
	    var el = radio.form.elements;
	
	    for (var i = 0; i < el.length; i++) {
	        if (el[i].name.substring(el[i].name.lastIndexOf(':')) == id) {
	            el[i].checked = false;
	        }
	    }
	    radio.checked = true;
	    fileModalFileHdfs = name;
	}
	
	function getPathModalFileHdfs(p){
		if (!fileModalFileHdfs){
			return p;
		}
		return p + "/"+ fileModalFileHdfs;
	}

	function selectFileLoadHdfs(isFile, nameFile){
    	if (isFile != "true"){
        	updateTableHdfs(nameFile);
    	}
    }
    
    //Function for saving
    function changeFile(f){
        fileModalFileHdfs = f;
    }
    
    function isHDFSFileExists(path){
        var fileExist = false;
        
        var table = jQuery('#divFileHdfs').find("table");
        var tbody = table.find("tbody");
        var rows = tbody.find("tr");
        rows.each(function(key, value){
            var file2 = jQuery(this).find("td a").html();
            if ((fileModalFileHdfs == file2) || (fileModalFileHdfs+'.rs' == file2) || (fileModalFileHdfs+'.srs' == file2)){
                fileExist = true;
            }
        });
        
        return fileExist;
    }

    function selectFileSaveHdfs(isFile, nameFile){
        if (isFile != "true"){
            updateTableHdfs(nameFile);
        }
    }
    
    function mountComboboxExtensionsFileSystemModalHDFS(){

    	jQuery("[id$='comboboxExtensionsFileSystemModalHDFS']").textext({
	    	plugins : 'arrow autocomplete'
	    }).bind('getSuggestions', function(e, data){

		try{
		        	
			var list =  #{browserHdfsBean.listExtensionsString} ,
		    	textext = jQuery(e.target).textext()[0],
		        query = (data ? data.query : '') || '' ;
		
		        jQuery(this).trigger('setSuggestions', {
			    	result : textext.itemManager().filter(list, query)
			    	}
		        );

			}catch(exception){
				alert(exception);
			}
	            
		});

    	jQuery("[id$='comboboxExtensionsFileSystemModalHDFS']").bind('setFormData', function(e, data, isEmpty){
    		refreshHdfsOpenFileTable();
    	});
		
    }
    
//]]>
</script>

	<a4j:status	onstart="jQuery.blockUI({ message: jQuery('#domMessageDivCanvas1') });"
		onerror="jQuery.unblockUI();" onsuccess="jQuery.unblockUI();"
		onstop="jQuery.unblockUI();" />

	<a4j:jsFunction name="refreshHdfsOpenFileTable" action="#{browserHdfsBean.changePath}" reRender="hdfsfsFile" 
		oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" />

	<a4j:jsFunction name="updateTableHdfs" action="#{browserHdfsBean.selectFile}" 
		reRender="pathOpenFile,hdfsfsFile,hdfsOpenFileBtn" oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" >
		<a4j:actionparam name="nameFile" />
	</a4j:jsFunction>
	
	<div class="pathHeader">
	<h:outputText value="#{messages.label_path}" />
	<h:inputText id="pathOpenFile" styleClass="mainPageTextField" label="Path" value="#{browserHdfsBean.path}"
		maxlength="255" style="width:395px;" onkeypress="return enableEnterKey(event, 'changePathLoadHdfsBtn');"/>
		
	<a4j:commandLink id="changePathLoadHdfsBtn" action="#{browserHdfsBean.changePath}" reRender="pathOpenFile,hdfsfsFile,hdfsOpenFileBtn" 
		oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" >
		<h:graphicImage value="../image/icons/button-search.gif" title='#{messages.filesystem_change_path}' styleClass="refreshButton" />
	</a4j:commandLink>
	
	<a4j:commandLink action="#{browserHdfsBean.goPrevious}" reRender="pathOpenFile,hdfsfsFile,hdfsOpenFileBtn"
		oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" >
		<h:graphicImage id="btPrev" value="../image/icons/button-previous.gif" title='#{messages.HdfsInterface_previous_help}' styleClass="refreshButton" />
	</a4j:commandLink>
	
	<a4j:commandLink action="#{browserHdfsBean.goNext}" reRender="pathOpenFile,hdfsfsFile,hdfsOpenFileBtn" 
		oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" >
		<h:graphicImage id="btNext" value="../image/icons/button-next.gif" title='#{messages.HdfsInterface_next_help}' styleClass="refreshButton" />
	</a4j:commandLink>
	
	<a4j:commandLink action="#{browserHdfsBean.goUp}" reRender="pathOpenFile,hdfsfsFile,hdfsOpenFileBtn"
		oncomplete="mountComboboxExtensionsFileSystemModalHDFS();" >
		<h:graphicImage id="browserHdfsBeanGoup" value="../image/icons/button-up.gif" title='#{messages.hdfs_goup}' styleClass="refreshButton" style="bt" />
	</a4j:commandLink>
	</div>
	<div class="divMenu">
	<h:outputText value="#{messages.label_file_name}  " rendered="#{browserHdfsBean.showSave == 'T'}"/>
    <h:inputText id="nameSaveFile" label="Name" onchange="changeFile(this.value)" rendered="#{browserHdfsBean.showSave == 'T'}"
        maxlength="40" style="width:395px;" onkeypress="return disableEnterKey(event);" onkeyup="nospaces(this)" />
	</div>
	
	<div style="width:600px;height:250px;overflow:auto;" id="divFileHdfs" >
	
	   <rich:dataTable id="hdfsfsFile" value="#{browserHdfsBean.tableGrid.rows}" var="item" rowKeyVar="indexTable"
            width="100%" height="10px" onRowMouseOver="this.style.backgroundColor='#f2b97a'"
            enableContextMenu="false" selectionMode="none" onRowMouseOut="this.style.backgroundColor='#{a4jSkin.rowBackgroundColor}'"
            rowClasses="even-row, odd-row">
    
            <rich:column style="border-bottom:0px;border-right:0px;" styleClass="loadTableRadio" width="32px;" rendered="#{browserHdfsBean.showSave  == 'F' || browserHdfsBean.showSave  == 'I' }">
                <f:facet name="header">
					<h:outputText value="" />
				</f:facet>
                <h:selectOneRadio value="#{item.selectedStr}" onclick="dataTableOpenSelectOneRadio(this, '#{browserHdfsBean.allProps[indexTable]['name']}');" 
                rendered="#{item.disableSelect}">
                    <f:selectItem itemValue="true" />
                </h:selectOneRadio>
            </rich:column>
            
            <rich:column style="border-bottom:0px;border-right:0px;" width="50px;">
				<f:facet name="header">
					<h:outputText value="" />
				</f:facet>
				<h:graphicImage value="../image/icons/icon-directory.gif" title='#{messages.HdfsInterface_properties_help}' 
					rendered="#{browserHdfsBean.allProps[indexTable]['type'] == 'directory'}" styleClass="btfileSystem" />
				<h:graphicImage value="../image/icons/icon-file.gif" title='#{messages.HdfsInterface_properties_help}' 
					rendered="#{browserHdfsBean.allProps[indexTable]['type'] == 'file'}" styleClass="btfileSystem" />
			</rich:column>
            
            <rich:column style="border-bottom:0px;border-right:0px;">
                <f:facet name="header">
                    <h:outputText value="#{messages.label_name}" />
                </f:facet>
               <a4j:commandLink value="#{browserHdfsBean.allProps[indexTable]['name']}"
                    title="#{browserHdfsBean.allProps[indexTable]['name']}"
					action="#{browserHdfsBean.verifyIfIsFile}"
					oncomplete="selectFileLoadHdfs('#{browserHdfsBean.file}', '#{browserHdfsBean.allProps[indexTable]['name']}')">
					<f:param name="nameFile" value="#{browserHdfsBean.allProps[indexTable]['name']}" />
				</a4j:commandLink>
            </rich:column>
    
            <rich:columns value="#{browserHdfsBean.tableGrid.titles == null? canvasBean.emptyList : browserHdfsBean.tableGrid.titles}" 
            	var="column" index="ind"
                style="border-bottom:0px;border-right:0px;">
                <f:facet name="header">
                    <h:outputText value="#{column}" />
                </f:facet>
                <h:outputText value="#{item.row[ind]}" title="#{item.row[ind]}" />
            </rich:columns>
    
        </rich:dataTable>

	</div>
	
	<br/>
    
    				<h:panelGroup style="width:150px" layout="block" >
                    <h:inputText value="#{browserHdfsBean.extensionsSelected}" 
                    	id="comboboxExtensionsFileSystemModalHDFS" style="width:145px"
                    	rendered="#{not empty browserHdfsBean.listExtensions &amp;&amp; ( browserHdfsBean.showSave == 'F' || browserHdfsBean.showSave == 'I' )}" >
                                  	 
                               	 
                    </h:inputText>
                    </h:panelGroup>
    
    
    
    <br />
    
    <rich:panel id="panelBtFileHdfs" style="border:none; float:right;" >
        
        <a4j:commandButton styleClass="greenButton" value="#{messages.button_cancel}"
            onclick="#{rich:component('modalFileHdfs')}.hide();">
        </a4j:commandButton>
    
    	<a4j:commandButton id="hdfsOpenFileBtn" styleClass="greenButton" 
    	    action="#{canvasBean.load}" value="#{messages.button_ok}"
    	    rendered="#{browserHdfsBean.showSave == 'F'}"
    		reRender="msnError,errorTable,formMenu"
    		oncomplete="if(#{requestScope['msnError'] == null} ){#{rich:component('modalFileHdfs')}.hide();loadWorkflow();}">
    		<a4j:actionparam value="getPathModalFileHdfs('#{browserHdfsBean.path}')" assignTo="#{canvasBean.path}" noEscape="true"/>
    	</a4j:commandButton>
    	
    	<a4j:commandButton id="hdfsImportFileBtn" styleClass="greenButton" 
    	    value="#{messages.button_ok}"
    	    rendered="#{browserHdfsBean.showSave == 'I'}"
    		reRender="msnError,errorTable,formMenu,modelImportPathHdfs"
    		oncomplete="#{rich:component('modalFileHdfs')}.hide();">
    		<a4j:actionparam value="getPathModalFileHdfs('#{browserHdfsBean.path}')" assignTo="#{browserHdfsBean.path}" noEscape="true"/>
    	</a4j:commandButton>
    	
    	<a4j:commandButton id="hdfsSaveFileBtn" styleClass="greenButton" action="#{canvasBean.checkName}"
    	    value="#{messages.button_ok}" rendered="#{browserHdfsBean.showSave == 'T'}"
            oncomplete="if(#{requestScope['msnError'] == null} ){ if(! isHDFSFileExists(getPathModalFileHdfs('#{browserHdfsBean.path}')) || confirm('#{messages.file_already_exists}')){save(getPathModalFileHdfs('#{browserHdfsBean.path}'));#{rich:component('modalFileHdfs')}.hide();}}"
            reRender="msnError" >
            <a4j:actionparam value="getPathModalFileHdfs('#{browserHdfsBean.path}')" assignTo="#{canvasBean.path}" noEscape="true"/>
        </a4j:commandButton>
        
        <a4j:commandButton id="hdfsExportFileBtn" styleClass="greenButton"
    	    value="#{messages.button_ok}" rendered="#{browserHdfsBean.showSave == 'E'}"
            oncomplete="#{rich:component('modalFileHdfs')}.hide();"
            reRender="modelExportPathHdfs" >
            <a4j:actionparam value="getPathModalFileHdfs('#{browserHdfsBean.path}')" assignTo="#{canvasBean.path}" noEscape="true"/>
        </a4j:commandButton>
	
	</rich:panel>
   
</ui:composition>
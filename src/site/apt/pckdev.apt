            ------
            Red Sqirl - Package Development
            ------

What is a package
	
	Packages are a group of actions that are used in Red Sqirl to perform specific processes on Red Sqirl. 
	They generally run on the same platform , e.g,. Pig , Hive 
	etc. This how Red Sqirl mudualarises its functionalities and manages what is available for the users.

What is in a  Package

	A Package will contain actions that can be used on Red Sqirl once the package is installed. 
	An action will have two files that are required , these are the help and image files.

Create a package


	Create new project as maven give a group id and an artifact id

	Edit pom to add necessary dependencies and configuration for packaging the package 
	

+---+
<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<main.pck>${project.build.directory}/${project.artifactId}-${project.version}/</main.pck>
		<target.pck>src/main/pck</target.pck>
		<maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
	</properties>

	<distributionManagement>
		<repository>
			<id>internal</id>
			<name>Internal Release Repository</name>
			<url>scp://dev.local.net/var/www/html/apache-archiva-1.3.6/data/repositories/internal</url>
		</repository>

		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshot Repository</name>
			<url>scp://dev.local.net/var/www/html/apache-archiva-1.3.6/data/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<organization>
		<name>Idiro Technologies</name>
		<url>http://www.idiro.com</url>
	</organization>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<outputDirectory>${main.pck}/lib/</outputDirectory>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${main.pck}</outputDirectory>
							<resources>
								<resource>
									<directory>${target.pck}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>zip_pck</id> 
						<phase>package</phase> 
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assembly/zip_pck.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>idiro</groupId>
			<artifactId>redsqirl-wf-interface</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>idiro</groupId>
			<artifactId>redsqirl-workflow</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.12</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

+--------------------------------------+

	<<Outcome:>> A project that is ready for creating new actions
	The skeleton of the project can be found here :  CREATE A LINK (1)

How to deploy a package

Download Example

